version: '3.8'

services:
  app:
    container_name: web_app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    # --- MODIFICADO AQUI ---
    # Adicionamos a variável de ambiente para o Redis.
    environment:
      - DB_URL=postgres://user:secret@db:5432/mydatabase
      - REDIS_URL=redis://redis:6379
    # --- MODIFICADO AQUI ---
    # Agora a aplicação também espera o Redis ficar saudável.
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:13
    container_name: db_postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- ADICIONADO AQUI ---
  # Adicionamos o serviço completo do Redis.
  redis:
    image: redis:alpine
    container_name: cache_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: